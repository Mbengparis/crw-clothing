{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs, QuerySnapshot } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD4TkR1Mvt1J0GxTEBRFy3YYL2K_RPgeS8\",\n  authDomain: \"crwn-clothing-db-1481c.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-1481c\",\n  storageBucket: \"crwn-clothing-db-1481c.firebasestorage.app\",\n  messagingSenderId: \"535960439826\",\n  appId: \"1:535960439826:web:6b4e0351808504a8fc1ccb\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n//google authrntication through firebase\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const {\n      title,\n      items\n    } = docSnapshot.data();\n    console.log(title.toLowerCase());\n\n    //acc[title.toLowerCase()] = items;\n  }, {});\n  return categoryMap;\n};\n\n//creating user in firesbase after google auth\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation = {}) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n\n  //if user data does not exist\n  //create / set the document with data from userAuth in my collection\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  //if user data exist, return userDocRef\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","QuerySnapshot","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","categoryMap","docs","reduce","acc","docSnapshot","items","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/mbeng/crw-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\n\nimport { \n    getAuth, \n    signInWithRedirect, \n    signInWithPopup, \n    GoogleAuthProvider,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    signOut,\n    onAuthStateChanged\n} from 'firebase/auth';\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n  collection,\n  writeBatch,\n  query,\n  getDocs,\n  QuerySnapshot\n} from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD4TkR1Mvt1J0GxTEBRFy3YYL2K_RPgeS8\",\n  authDomain: \"crwn-clothing-db-1481c.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-1481c\",\n  storageBucket: \"crwn-clothing-db-1481c.firebasestorage.app\",\n  messagingSenderId: \"535960439826\",\n  appId: \"1:535960439826:web:6b4e0351808504a8fc1ccb\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n//google authrntication through firebase\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n   prompt: \"select_account\"\n});\n\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n   signInWithPopup (auth, googleProvider);\n\nexport const signInWithGoogleRedirect = () => \n  signInWithRedirect(auth, googleProvider)\n\nexport const db = getFirestore();\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch =  writeBatch(db);\n\n  objectsToAdd.forEach((object) => {\n    const docRef =  doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  })\n\n    await batch.commit();\n    console.log('done');\n}\n\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const { title, items } = docSnapshot.data();\n    console.log(title.toLowerCase())\n\n     //acc[title.toLowerCase()] = items;\n    \n  }, {})\n\n  return categoryMap;\n}\n\n//creating user in firesbase after google auth\nexport const createUserDocumentFromAuth = async (\n  userAuth, \n  additionalInformation = {}) => {\n\n   if(!userAuth) return;\n\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  console.log(userDocRef);\n\n  const userSnapshot = await getDoc(userDocRef);\n  \n  //if user data does not exist\n  //create / set the document with data from userAuth in my collection\n   if(!userSnapshot.exists()) {\n     const { displayName, email} = userAuth;\n     const createAt = new Date();\n\n     try {\n       await setDoc(userDocRef, {\n        displayName,\n        email,\n        createAt,\n        ...additionalInformation\n       })\n     } catch (error) {\n        console.log('error creating the user', error.message);\n     }\n   }\n\n  //if user data exist, return userDocRef\n   return userDocRef;\n}\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if(!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n}\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if(!email || !password) return;\n\n  return await signInWithEmailAndPassword(auth, email, password);\n}\n\nexport const signOutUser = async () => await signOut(auth); \n\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth, callback);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}